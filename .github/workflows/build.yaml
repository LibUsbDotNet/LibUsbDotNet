name: build
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  libusb_windows:
    runs-on: windows-2019

    strategy:
      matrix:
        triplet:
          - "x86-windows"
          - "x64-windows"
          - "arm64-windows"

        package:
          - name: "libusb"

    env:
      VCPKG_ROOT: C:\vcpkg

    steps:
      - name: Build ${{ matrix.package.name }}:${{ matrix.triplet }}
        run: vcpkg install ${{ matrix.package.name }}:${{ matrix.triplet }}

      - name: Upload vcpkg artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.package.name }}-${{ github.run_id }}
          path: ${{ env.VCPKG_ROOT }}/installed/

      - name: Upload vcpkg build tree
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.package.name }}-${{ github.run_id }}-buildtree
          path: ${{ env.VCPKG_ROOT }}/buildtrees/${{ matrix.package.name }}/

  libusb_osx:
    runs-on: macos-13

    strategy:
      matrix:
        triplet:
          - "x64-osx-dynamic"
          - "arm64-osx-dynamic"

        package:
          - name: "libusb"

    env:
      VCPKG_ROOT: /usr/local/share/vcpkg

    steps:
      - name: Install build dependencies
        run: brew install autoconf automake libtool

      - name: Build ${{ matrix.package.name }}:${{ matrix.triplet }}
        run: vcpkg install ${{ matrix.package.name }}:${{ matrix.triplet }} --overlay-triplets=${{ env.VCPKG_ROOT }}/triplets/community/

      - name: Upload vcpkg artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.package.name }}-${{ github.run_id }}
          path: ${{ env.VCPKG_ROOT }}/installed/

  libusbdotnet_windows:
    runs-on: windows-2022

    needs: [ libusb_windows, libusb_osx ]

    env:
      VCPKG_ROOT: C:\vcpkg

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: libusb-${{ github.run_id }}
          path: ${{ env.VCPKG_ROOT }}/installed/

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Build
        run: dotnet pack src\LibUsbDotNet\LibUsbDotNet.csproj -c Release -o ${{ github.workspace }}/nuget/

      - name: Test (x64)
        run: |
          set PATH=%PATH%;%VCPKG_ROOT%\installed\x64-windows\bin
          dotnet test src\LibUsbDotNet.Tests\LibUsbDotNet.Tests.csproj -p:RuntimeIdentifier=win7-x64
        shell: cmd

      # Recent versions of GitHub actions no longer install a 32-bit .NET host
      #- name: Test (x86)
      #  run: |
      #    set PATH=%PATH%;%VCPKG_ROOT%\installed\x86-windows\bin
      #    dotnet test src\LibUsbDotNet.Tests\LibUsbDotNet.Tests.csproj -p:RuntimeIdentifier=win7-x86
      #  shell: cmd

      - name: Upload LibUsbDotNet NuGet package
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: LibUsbDotNet-${{ github.run_id }}
          path: '${{ github.workspace }}/nuget/' 

  libusbdotnet_macos:
    runs-on: macos-13

    needs: [ libusb_windows, libusb_osx ]

    env:
      VCPKG_ROOT: /usr/local/share/vcpkg

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: libusb-${{ github.run_id }}
          path: ${{ env.VCPKG_ROOT }}/installed/

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Test
        run: |
          export LD_LIBRARY_PATH=$VCPKG_ROOT/installed/x64-osx-dynamic/lib/:$LD_LIBRARY_PATH
          dotnet test src/LibUsbDotNet.Tests/LibUsbDotNet.Tests.csproj

  libusbdotnet_ubuntu:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install libusb
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0-0

      - name: Test
        run: |
          dotnet test src/LibUsbDotNet.Tests/LibUsbDotNet.Tests.csproj
