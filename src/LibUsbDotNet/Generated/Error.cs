//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright © 2006-2010 Travis Robinson. All rights reserved.
// Copyright © 2011-2018 LibUsbDotNet contributors. All rights reserved.
// 
// website: http://github.com/libusbdotnet/libusbdotnet
// 
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2 of the License, or 
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful, but 
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
// 
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. or 
// visit www.gnu.org.
// 
//

using System;

namespace LibUsbDotNet
{
    /// <summary>
    /// Error codes. Most libusb functions return 0 on success or one of these
    /// codes on failure.
    /// You can call libusb_error_name() to retrieve a string representation of an
    /// error code or libusb_strerror() to get an end-user suitable description of
    /// an error code.
    /// </summary>
    [Flags]
    public enum Error : int
    {
        /// <summary>
        /// Success (no error)
        /// </summary>
        Success = 0,

        /// <summary>
        /// Input/output error
        /// </summary>
        Io = -1,

        /// <summary>
        /// Invalid parameter
        /// </summary>
        InvalidParam = -2,

        /// <summary>
        /// Access denied (insufficient permissions)
        /// </summary>
        Access = -3,

        /// <summary>
        /// No such device (it may have been disconnected)
        /// </summary>
        NoDevice = -4,

        /// <summary>
        /// Entity not found
        /// </summary>
        NotFound = -5,

        /// <summary>
        /// Resource busy
        /// </summary>
        Busy = -6,

        /// <summary>
        /// Operation timed out
        /// </summary>
        Timeout = -7,

        /// <summary>
        /// Overflow
        /// </summary>
        Overflow = -8,

        /// <summary>
        /// Pipe error
        /// </summary>
        Pipe = -9,

        /// <summary>
        /// System call interrupted (perhaps due to signal)
        /// </summary>
        Interrupted = -10,

        /// <summary>
        /// Insufficient memory
        /// </summary>
        NoMem = -11,

        /// <summary>
        /// Operation not supported or unimplemented on this platform
        /// </summary>
        NotSupported = -12,

        /// <summary>
        /// Other error
        /// </summary>
        Other = -99,

    }
}
